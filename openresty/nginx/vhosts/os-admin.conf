server
{
    listen 8083;
    server_name admin.wsl.net;
    index index.php index.html index.htm default.php default.htm default.html;
    root /www/wwwroot/project/os_admin/public;
#     root /usr/local/openresty/nginx/html;
#     CERT-APPLY-CHECK--START
#     用于SSL证书申请时的文件验证相关配置 -- 请勿删除
#     include /etc/nginx/ssl/nginx/well-known/120.24.160.64_8083.conf;
#     CERT-APPLY-CHECK--END

    #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则
    #error_page 404/404.html;
    #SSL-END

    #ERROR-PAGE-START  错误页配置，可以注释、删除或修改
    #error_page 404 /404.html;
    #error_page 502 /502.html;
    #ERROR-PAGE-END

    #PHP-INFO-START  PHP引用配置，可以注释或修改
#     include enable-php-73.conf;
    #PHP-INFO-END

    #REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效
    location / {
      set $enable_cors 0;
      if ( $enable_cors = 0 ) {
          #CORS 配置
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
          #是否允许cookie传输
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With,X-Data-Type,X-Auth-Token';
      }

      #针对浏览器的options预请求直接返回200，否则会被403 forbidden--invalie CORS request
      if ( $request_method = 'OPTIONS' ) {
          #CORS 配置
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
          #是否允许cookie传输
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With,X-Data-Type,X-Auth-Token';
          return 200;
      }

    	if (!-e $request_filename) {
          rewrite ^(.*)$ /test_dj_admin_20200101.php?s=/$1 last;
          break;
      }
    }

    try_files $uri $uri/ /test_dj_admin_20200101.php?$query_string;

    add_header              Access-Control-Allow-Origin '*';
    add_header              Access-Control-Allow-Headers X-Requested-With;
    add_header              Access-Control-Allow-Methods GET,POST,OPTIONS;

    client_max_body_size 20M;
    client_body_buffer_size 128k;

    location ~\.php$ {
        fastcgi_pass php73:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
    #REWRITE-END

    #禁止访问的文件或目录
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md)
    {
        return 404;
    }

    #一键申请SSL证书验证目录相关设置
    location ~ \.well-known{
        allow all;
    }

    #禁止在证书验证目录放入敏感文件
    if ( $uri ~ "^/\.well-known/.*\.(php|jsp|py|js|css|lua|ts|go|zip|tar\.gz|rar|7z|sql|bak)$" ) {
        return 403;
    }

    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
    {
        expires      30d;
        error_log /dev/null;
        access_log /dev/null;
    }

    location ~ .*\.(js|css)?$
    {
        expires      12h;
        error_log /dev/null;
        access_log /dev/null;
    }
    access_log  /www/wwwlogs/nginx/os_admin.access.log;
    error_log  /www/wwwlogs/nginx/os_admin.error.log;
}
